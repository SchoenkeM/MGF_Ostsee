function initializeFigure(obj)

    fig   	= 43;
    hfig 	= figure(fig);
    clf(fig)
    set(hfig,...
        'Units',        'normalized',...
        'Position',     [0.5 0 0.5 1])
    
    nRaster	= max(cat(1,obj.RasterData.AxesSubscripts));
    
    spnxr  	= ceil(sqrt(nRaster));
    spny 	= ceil(nRaster/spnxr);
    spnx    = spnxr + 1;
    spi     = reshape(1:spnx*spny,spnx,spny)';
    spir    = spi(1:spny,1:spnxr);
    
    header  = 0.1; % In normalized units
    
    % Initialize background axis
    obj.BackgroundAxisHandle = axes(hfig,...
        'Units',        'normalized',...
        'Position',     [0 0 1 1],...
        'NextPlot',     'add',...
        'XColor',       'none',...
        'YColor',       'none',...
        'Color',        'none');
    
    % Initialize text objects
    obj.TitleHandle = text(0.01,0.99,'',...
        'HorizontalAlignment',      'left',...
        'VerticalAlignment',        'top',...
        'FontSize',                 16,...
        'Tag',                      'title');
    obj.TextHandles(1) = text(0.99,0.99,'loading ...',...
        'HorizontalAlignment',      'right',...
        'VerticalAlignment',        'top',...
        'FontSize',                 14,...
        'Tag',                      'status');
    obj.TextHandles(2) = text(0.99,0.01,'',...
        'HorizontalAlignment',      'right',...
        'VerticalAlignment',        'bottom',...
        'FontSize',                 14,...
        'Tag',                      'help');
    
    hsp     = gobjects(spnx*spny,1);
    for row = 1:spny
        for col = 1:spnx - 1
            position    = [(col - 1)/spnx,...
                           ((1 - header)*(spny - row))/spny,...
                           1/spnx,...
                           (1 - header)/spny];
            hsp(spi(row,col)) = axes(hfig,...
                'Units',            'normalized',...
                'Position',         position,...
                'NextPlot',         'add',...
                'DataAspectRatio',  ones(1,3),...
                'XColor',           'none',...
                'YColor',           'none',...
                'Color',            'none');
        end
    end
    row = 1;
    col = spnx;
    position    = [(col - 1)/spnx,...
                   0,...
                   1/spnx,...
                   1 - header];
    hsp(spi(row,col)) = axes(hfig,...
        'Units',            'normalized',...
        'Position',         position,...
        'NextPlot',         'add',...
        'XColor',           'none',...
        'YColor',           'none',...
        'Color',            'none');
    for row = 2:spny
        hsp(spi(row,col)) = hsp(spi(1,col));
    end
    
    hfig.UserData       = linkprop(reshape(hsp(spi(1:spny,1:spnxr)),[],1),{'XLim','YLim'});
    
    % Assign variables to obj properties
	obj.AxesMeta        = struct;
    obj.AxesMeta.spnx  	= spnx;
    obj.AxesMeta.spnxr 	= spnxr;
    obj.AxesMeta.spny 	= spny;
    obj.AxesMeta.spi	= spi;
    obj.AxesMeta.spir	= spir;
    obj.FigureHandles   = hfig;
    obj.AxesHandles     = hsp;
    
    drawBackground(obj)
    initializeLines(obj)
    initializeDigraph(obj)
    zoomToRaster(obj)
    
    % Clear status text
    set(findobj(obj.TextHandles,'Tag','status'),...
        'String',       '')
    
    % Set help text
    set(findobj(obj.TextHandles,'Tag','help'),...
        'String',       {'▲ ▼: show next/previous intersection'; ...
                         '◀ ▶: select top track'; ...
                         '⎵: deselect top track'; ...
                         'o: toggle line overlay'; ...
                         's: save to disk'; ...
                         'esc: quit'})
    drawnow
end