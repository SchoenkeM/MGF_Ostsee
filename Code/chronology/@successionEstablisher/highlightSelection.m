function highlightSelection(obj)

    intersection    = obj.CurrentIntersection;
    intersectionId  = obj.Intersections.Attributes{obj.IntersectionOrder(intersection),'intersection'};
    lineIndices     = obj.Intersections.Attributes{obj.IntersectionOrder(intersection),{'track','track_2'}};
    
	clr         = {'\color[rgb]{0.8941,0.1020,0.1098}'
                   '\color[rgb]{0.2157,0.4941,0.7216}'
                   '\color[rgb]{0,0,0}'
                   '\color[rgb]{0.8,0.8,0.8}'};
	switch obj.SelectedTrack
        case 1
            txt	= {sprintf('intersection %u %s(id:%u)%s: Which track is on top/newer?',...
                        intersection,...
                        clr{4},intersectionId,...
                        clr{3});...
                   sprintf('%s%strack %u (◀)%s%s or %strack %u (▶)',...
                        '\bf',clr{1},lineIndices(1),'\rm',...
                        clr{3},...
                        clr{2},lineIndices(2))};
                    
            obj.Intersections.Attributes{obj.IntersectionOrder(obj.CurrentIntersection),'topTrack'} = obj.Intersections.Attributes{obj.IntersectionOrder(obj.CurrentIntersection),'track'};
        case 2
            txt	= {sprintf('intersection %u %s(id:%u)%s: Which track is on top/newer?',...
                        intersection,...
                        clr{4},intersectionId,...
                        clr{3});...
                   sprintf('%strack %u (◀)%s or %s%strack %u (▶)%s',...
                        clr{1},lineIndices(1),...
                        clr{3},...
                        '\bf',clr{2},lineIndices(2),'\rm')};
            obj.Intersections.Attributes{obj.IntersectionOrder(obj.CurrentIntersection),'topTrack'} = obj.Intersections.Attributes{obj.IntersectionOrder(obj.CurrentIntersection),'track_2'};
        case 0
            txt	= {sprintf('intersection %u %s(id:%u)%s: Which track is on top/newer?',...
                        intersection,...
                        clr{4},intersectionId,...
                        clr{3});...
                   sprintf('%strack %u (◀)%s or %strack %u (▶)',...
                        clr{1},lineIndices(1),...
                        clr{3},...
                        clr{2},lineIndices(2))};
            obj.Intersections.Attributes{obj.IntersectionOrder(obj.CurrentIntersection),'topTrack'} = 0;
	end
        
    set(obj.TitleHandle,...
        'String',       txt,...
        'Interpreter',  'tex')
    initializeDigraph(obj)
    drawnow
end